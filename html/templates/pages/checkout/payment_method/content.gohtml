{{ define "content" }}
    {{- /*gotype: github.com/aliml92/anor/html/dtos/pages/checkout/payment_method.Content*/ -}}
    <section style="min-height:81vh">
        <div class="container" style="max-width: 1000px;">
            <!-- Checkout Steps -->
            {{ template "stepper" .Stepper }}

            <!-- Two-column layout -->
            <div class="row">
                <!-- Payment Method Selection -->
                <div class="col-md-7 px-4">
                    <h4 style="font-weight: 600; font-size: 20px; line-height: 24px;">Choose Payment Method</h4>
                    <hr class="mt-1">

                    <!-- PayPal Option -->
                    <div class="form-check my-3 d-flex justify-content-between align-items-center">
                        <div>
                            <input class="form-check-input custom-radio" type="radio" name="paymentMethod" id="paypal" disabled>
                            <label class="form-check-label ms-2" for="paypal" style="line-height: 1.7">
                                PayPal
                                <span class="badge bg-info ms-2" style="color: black" data-bs-toggle="tooltip" data-bs-placement="top" title="This payment option is coming soon!">Coming Soon</span>
                            </label>
                            <p class="text-muted small mt-1 ms-2" style="font-size: 0.8rem;">
                                Youâ€™ll be forwarded to PayPal to complete your payment.
                            </p>
                        </div>
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17.4 7.8C18.2 8.6 18.6 9.7 18.6 11C18.6 15.4 15.1 17.8 11.3 17.8H8.1L7 22H3L6.4 7H13.2C15.1 7 16.7 7.3 17.4 7.8Z"/><path d="M14.5 3H20.2L18.4 14.9H13.5L14.5 3Z"/></svg>
                    </div>
                    <hr class="payment-divider">

                    <!-- Credit/Debit Card Option -->
                    <div class="form-check my-3 d-flex justify-content-between align-items-center">
                        <div>
                            <input class="form-check-input custom-radio" type="radio" name="paymentMethod" id="creditDebit">
                            <label class="form-check-label ms-2" for="creditDebit" style="line-height: 1.7">
                                Credit/Debit Card
                            </label>
                        </div>
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect><line x1="1" y1="10" x2="23" y2="10"></line></svg>
                    </div>


                    <!-- Stripe Payment Element (hidden by default) -->
                    <div id="stripePaymentElement" class="d-none mx-auto" style="max-width: 350px">
                        <form id="paymentForm">
                            <div id="paymentElement">
                                <!--Stripe.js injects the Payment Element-->
                            </div>
                            <div id="payment-message" class="hidden"></div>
                        </form>
                    </div>

                    <hr class="payment-divider">
                    <!-- Anor Installment Option -->
                    <div class="form-check my-3 d-flex justify-content-between align-items-center">
                        <div>
                            <input class="form-check-input custom-radio" type="radio" name="paymentMethod" id="anorInstallment" disabled>
                            <label class="form-check-label ms-2" for="anorInstallment" style="line-height: 1.7">
                                Anor Installment
                                <span class="badge bg-info ms-2" style="color: black" data-bs-toggle="tooltip" data-bs-placement="top" title="This payment option is coming soon!">Coming Soon</span>
                            </label>
                            <p class="text-muted small mt-1 ms-2" style="font-size: 0.8rem;">Pay in easy monthly installments with Anor.</p>
                        </div>
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line></svg>
                    </div>
                    <hr class="payment-divider">

                    <!-- Cash on Delivery Option -->
                    <div class="form-check my-3 d-flex justify-content-between align-items-center">
                        <div>
                            <input class="form-check-input custom-radio" type="radio" name="paymentMethod" id="cashOnDelivery" disabled>
                            <label class="form-check-label ms-2" for="cashOnDelivery" style="line-height: 1.7">
                                Pay on Delivery/Pickup
                                <span class="badge bg-info ms-2" style="color: black" data-bs-toggle="tooltip" data-bs-placement="top" title="Coming very soon: A new way to pay that you'll love!">Coming Soon</span>
                            </label>
                            <p class="text-muted small mt-1 ms-2" style="font-size: 0.8rem;">
                                For courier: Pay with cash or QR code when your order arrives.<br>
                                For pickup: Pay with cash or card at the pickup point.
                            </p>
                        </div>
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M3 3h18v13H3z"/>
                            <path d="M16 16v2a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2"/>
                            <circle cx="9" cy="10" r="2"/>
                            <path d="M13 7h4"/>
                            <path d="M13 13h4"/>
                        </svg>
                    </div>
                </div>

                <!-- Order Summary -->
                <div class="col-md-5 px-4">
                    <h4 style="font-weight: 600; font-size: 20px; line-height: 24px;">Coupon/ Gift Card <span class="text-muted" style="font-size: 14px; font-weight: normal">(optional)</span></h4>
                    <hr class="mt-1">
                    <p>You will be able to enter a new coupon or Gift Card code at the next step.</p>
                    <div class="card mb-3 rounded-0 border-0" style="background-color: #efeff0;">
                        <div class="card-body">
                            <dl class="row">
                                <dt class="col-7 fw-normal">Shipping:</dt>
                                <dd class="col-5 text-end">$0.00</dd>
                            </dl>
                            <hr>
                            <dl class="row">
                                <dt class="col-7 h5">Total:<span class="text-muted" style="font-size: 13px; font-weight: normal">VAT Included</span></dt>
                                <dd class="col-5 h5 text-end ">$34.00</dd>
                            </dl>

                            <div class="mt-3 mb-2">
                                <a href="" class="btn btn-lg p-3 w-100 custom-checkout-btn" id="nextBtn">
                                    Next
                                </a>
                            </div>
                            <div id="errorMessage" class="alert alert-danger error-message-subtle animate__animated animate__shakeX" style="display: none;"></div>
                            <p class="mt-3" style="color: rgb(26,26,26); font-size: 12px">
                                You can review and confirm your order in the next step
                            </p>
                        </div> <!-- card-body.// -->
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Javascript code that handles events in the checkout/payment-method page -->
    <script>
      const nextBtn = htmx.find('#nextBtn');
      const stripe = Stripe('pk_test_51PJ8DELIUpPV6l70peDt17AduGuAgw2HvatxDUMmEq87fQLmfOPUmXbpIicZx12g5Vg2CBQgrMWRmveuKoHWKEjl00daRXleZN');

      let elements;
      const errorMessage = htmx.find('#errorMessage');

      async function getOrderData() {
        try {
          const response = await fetch('/checkout/order-summary', {
            method: 'GET',
            credentials: 'same-origin',
            headers: {
              'Content-Type': 'application/json',
              // 'X-CSRF-Token': getCsrfToken(),
            },
          });

          if (!response.ok) {
            throw new Error('Failed to fetch order data');
          }

          return await response.json();
        } catch (error) {
          console.error('Error fetching order data:', error);
          throw error;
        }
      }

      async function initializeStripe() {
        try {
          const orderData = await getOrderData();

          const options = {
            mode: 'payment',
            amount: orderData.amount,
            currency: orderData.currency,
            paymentMethodCreation: 'manual',
            appearance: {
              theme: 'stripe',
              variables: {
                borderRadius: '0px',
              },
            },
          };

          elements = stripe.elements(options);
          const paymentElement = elements.create('payment');
          paymentElement.mount('#paymentElement');
        } catch (error) {
          console.error('Error initializing Stripe:', error);
          // Handle error (e.g., show error message to user)
        }
      }

      function showError(message) {
        errorMessage.textContent = message;
        errorMessage.style.display = 'block';
      }

      function hideError() {
        errorMessage.textContent = '';
        errorMessage.style.display = 'none';
      }

      htmx.on('#creditDebit', 'change', function(evt) {
        hideError();
        htmx.find('#stripePaymentElement').classList.remove('d-none');
        initializeStripe();
      })

      htmx.on('#nextBtn', 'click', async function(evt) {
        evt.preventDefault();

        if (!elements) {
          showError("The payment system is not ready yet. Please try again in a moment.");
          return;
        }

        if (nextBtn.disabled) {
          return;
        }

        nextBtn.disabled = true;
        hideError();

        try {
          const { error: submitError } = await elements.submit();
          if (submitError) {
            console.error("elements.submit error ", submitError);
            nextBtn.disabled = false;
            // Display error to user
            return;
          }

          const currentHost = window.location.hostname;
          const baseUrl = currentHost === 'localhost' || currentHost === '127.0.0.1'
            ? 'http://localhost:8008'
            : 'https://anor.alisherm.dev';

          const {error, confirmationToken} = await stripe.createConfirmationToken({
            elements,
            params: {
              return_url: `${baseUrl}/checkout/redirect`,
            },
          });

          if (error) {
            console.error("createConfirmationToken error ", error);
            nextBtn.disabled = false;
            // Display error to user
            return;
          }

          console.log("return url ", confirmationToken.return_url)
          const response = await fetch('/checkout/stripe-ctoken', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({confirmation_token_id: confirmationToken.id}),
          });

          if (response.ok) {
            // Navigate to the next page or update UI as needed
            window.location.href = '/checkout/confirm';
          } else {
            console.error('Failed to save confirmation token');
            nextBtn.disabled = false;
            // Display error to user
          }
        } catch (error) {
          console.error("Error:", error);
          showError(error.message || "There was a problem processing your payment info. Please try again.");
        } finally {
          nextBtn.disabled = false;
        }
      })

    </script>
{{ end }}